Для профилирования был выбран иснтрумент jconsole. Для упрощенного отслеживания добавил ограничения размера heap в 50 мегабайт

при добавлении 100000 новых заявок использование хипа возрастает до 50%, причем загружается g1 old gen. Области памяти Eden и Survivor практически не загружены
при удалении всех этих заявок из памяти хип остается все так-же заполненным на 50%.
По нажатию perform garbage collector, хип очищается до начального состояния. Eden и Survivor очищаются польностью

при добавлении 200000 новых заявок хип загружен на 75%, вывод всех значений в консоль занимает порядка 5% памяти.
При нажатии кнопки Perform GC эти 5% очищаются, память так же используется на 75%
при удалении элементов хип заполняется до 90%, по срабатыванию сборщика мусора очищается память до начальных значений(порядка 7%). Eden и Survivor очищаются польностью

Теперь попробую добавить миллион заявок, что явно переполнит хип. Получил ошибку "Exception in thread "main" java.lang.OutOfMemoryError: Java heap space"
Программа остановила исполнение, что демонстрирует важность сборщиков мусора - если вовремя не собирать мусор, то в моменте программа может словить сбой, упасть с ошибкой.